#include <iostream>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <Windows.h>
#include <string>
using namespace std;
int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    int ran;
    char alhavit[33] = { 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ь', 'ы', 'ъ', 'э', 'ю', 'я' };//алфавит для проверки введённых значений
    srand(time(0)); //генератор числа для выбора слова
    
    ran = rand() % 100; //тоже генератор 
    setlocale(LC_CTYPE, "rus"); //библиотека для русского языка
    string slprob;
    string zagslovo; //здесь будет загаданное слово
    string slova[100] = { "пространство", "рассказ", "двигатель", "январь", "сын", "талант", "подготовка", "горло", "доллар", "культура", "подъезд", "дом", "слово", "пункт", "сотрудничество", "ребята", "мир", "изучение", "цель", "поведение", "следователь", "соединение", "сотрудничество", "течение", "часы", "станция", "представитель", "исключение", "клуб", "практика", "процедура", "сообщение", "состояние", "инженер", "опасность", "активность", "храм", "прошлое", "фраза", "сюжет", "родитель", "коридор", "момент", "возможность", "имя", "пора", "солнце", "слеза", "автомобиль", "повышение", "контроль", "растение", "запах", "лес", "автомат", "действие", "шум", "лоб", "речь", "председатель", "производство", "партнер", "сведение", "академия", "ремонт", "субъект", "ключ", "сезон", "часы", "портрет", "средство", "министерство", "крыша", "царь", "республика", "величина", "объяснение", "август", "таблица", "поиск", "открытие", "мгновение", "организация", "кольцо", "ход", "кризис", "субъект", "сообщение", "разница", "смысл", "доказательство", "коммунист", "обязательство", "кабинет", "действие", "отдых", "принятие", "создание", "лето", "цель"}; //массив со словами

    cout << "//Виселица//" << "\n";
    cout << "\n" << "Сыграем в игру" << "\n" << "Правило одно: угадать слово" << "\n" << "У вас 9 попыток" << "\n";
    
    zagslovo = slova[ran]; //объявляем загаданное слово
    slprob = zagslovo; 
    
    int length = zagslovo.size(); //длина слова
    cout << "\n";
    const char* txt = zagslovo.c_str(); //перевод string в char
    char probel[100];
    strcpy_s(probel, slprob.c_str()); //вывод слова с заменой букв
    for (int y = 0; y < length; y++)
    {
        probel[y] = '?';
        cout << probel[y];
    }
    cout << " Что это за слово?" << "\n";
    cout << "\n";
    char bukvaigr; //буква игрока
    int i = 0, o = 0, t = 0, a = 0, n = 0; //переменная для массива с буквами слова 
    int oshibki = 0, bukvi = 0, pro=0, prov=0, prova=0, kolved=0;
    char vedznach[100];
    while (oshibki != 9 && bukvi != length) {
        while (oshibki != 9 && bukvi != length) {
            cout << "Введите значение --> ";
            cin >> bukvaigr; //ввод буквы игрока
            cout << "\n";
            //проверка на некоректные данные
            for (int l = 0; l < 33; l++)
            {
                if (bukvaigr == alhavit[o])
                {
                    prov = prov + 1;
                }
                o = o + 1;
            }
            if (prov == 0)
            {
                cout << "Введены некорректные данные" << endl;
                cout << "\n";
                o = 0;
                prov = 0;
                break;
            }
            o = 0;
            prov = 0;
            //проверка на повторение
            for (int s = 0; s < kolved; s++)
            {
                if (bukvaigr == vedznach[t])
                {
                    prova = prova + 1;
                }
                t = t + 1;
            }
            if (prova != 0) 
            {
                cout << "Вы уже вводили эту букву" << endl;
                cout << "\n";
                t = 0;
                prova = 0;
                break;
            }
            vedznach[a] = bukvaigr;
            a = a + 1;
            t = 0;
            prova = 0;
            kolved = kolved + 1;
            //
            for (int j = 0; j < length; j++) { //проверка наличия буквы
                if (bukvaigr == txt[i]) //сравнение буквы игрока с буквами массива
                {
                    bukvi = bukvi + 1; //отгаданные буквы 
                    pro = pro + 1; //счётчик для вывода да или нет
                    probel[i] = txt[i];
                }
                i = i + 1;
            }
            if (pro == 0) //если не было совпадений счётчик 0
            {
                n = n + 1;
                switch (n) {
                case 9: printf("  ____ |\n |   | |\n |   O |\n |  /|\\|\n |  / \\|\n_|_    |"); break;
                case 8: printf("  ____ |\n |   | |\n |   O |\n |  /|\\|\n |  /  |\n_|_    |"); break;
                case 7: printf("  ____ |\n |   | |\n |   O |\n |  /|\\|\n |     |\n_|_    |"); break;
                case 6: printf("  ____ |\n |   | |\n |   O |\n |  /| |\n |     |\n_|_    |"); break;
                case 5: printf("  ____ |\n |   | |\n |   O |\n |   | |\n |     |\n_|_    |"); break;
                case 4: printf("  ____ |\n |   | |\n |   O |\n |     |\n |     |\n_|_    |"); break;
                case 3: printf("  ____ |\n |     |\n |     |\n |     |\n |     |\n_|_    |"); break;
                case 2: printf("       |\n |     |\n |     |\n |     |\n |     |\n_|_    |"); break;
                case 1: printf("       |\n       |\n       |\n       |\n       |\n___    |"); break;
                }
                cout << " Нет такой буквы " << "(" << bukvaigr << ")"; //вывод нет
                oshibki = oshibki + 1; //колличество ошибок
            }
            if (pro != 0) //если не было совпадений счётчик 0
            {
                cout << "Есть такая буква " << "(" << bukvaigr << ")" << "\n"; //вывод да
            }
            cout << "\n";
            cout << "\n";
            for (int p = 0; p < length; p++)
            {
                cout << probel[p];
            }
            cout << "\n";
            cout << "\n";
            pro = 0; //обнуление счётчиков 
            i = 0;
            }
        }
    if (bukvi == length) { //если все буквы отгаданы
        cout << "Вы победили " << " это слово --> ";
        for (int h = 0; h < length; h++) 
        {
            cout << txt[h];
        }
    }
    if (oshibki == 9) { //если 9 ошибок совершенно 
        cout << "Вы проиграли " << " это слово --> ";
        for (int h = 0; h < length; h++)
        {
            cout << txt[h];
        }
    }
}
